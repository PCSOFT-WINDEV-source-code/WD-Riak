#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : RiakBucket
 major_version : 28
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x152799530093c1f0
 internal_properties : CAAAAAgAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  internal_properties : CAAAAAgAAADDJ0UvOg+fFzkH25DcYtp7M5vTiOZC2eJvazXDG/OgAADKh4iaTPkfzy/eOkPBX7Ds3lFy2DJxM5oaYXyYxj6Cov7UkuaYmJeQxibFa4oYb9ODglXj
  type_code : 10
  p_codes :
   -
     code : |1+
      RiakBucket is Class
      PROTECTED
      	m_sServerAddress is string
      	m_sBucketAddress is string
      	m_sBucketName is string
      	
      END
     type : 131072
  procedures :
   -
     name : Manufacturer
     procedure_id : 1524355580659286512
     type_code : 27
     code : |1+
      PROCEDURE Constructor( sAddress is string, sBucketName is string )
      
      m_sServerAddress = sAddress
      m_sBucketAddress = sAddress+["/"]+"riak/"+URLEncode(StringToUTF8(sBucketName))
      m_sBucketName = URLEncode(StringToUTF8(sBucketName))
     type : 589824
   -
     name : Destructor_
     procedure_id : 1524355580659352048
     type_code : 28
     code : |1+
      PROCEDURE Destructor()
      
     type : 655360
   -
     name : ObjectWrite
     internal_properties : CAAAAAgAAADCDrkgDPaEsPT5giiw2MtJH8p2how3agWCXcypVji/zVP3Z0Jfkunm01HP484NiXm+0YYfsNXdHTj8dwhgidSfnPpxR2H+ZA8nt/A7nlOqCCxQ09Kw9IMN2ChPFRcenhKdO/cEI+e7/cLci1qkBLoI5nj7vzOdfM5iIBZuVjJRBJpNdqqJKvhVTDuSBGXlOspw3RI32IbR
     procedure_id : 1524355580659417584
     type_code : 12
     code : |1+
      // Summary: Adds a variable into the bucket
      // Syntax:
      //[ <Result> = ] ObjectWrite (<variable> [, <sKeyName> is string])
      //
      // Parameters:
      //	variable: Variable to add
      //	sKeyName (ANSI string - default value=""): Name of the key ; if this name is not specified, Riak creates an identifier that is returned by the method
      // Return value:
      // 	ANSI string: Name of the key or identifier generated by Riak
      //
      //	sDataType (ANSI string - default value=""): <specify the role of sDataType>// Automatic process of errors:   run CASE ERROR
      //
      
      PROCEDURE ObjectWrite( variable, LOCAL sKeyName is string = "" )
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/store-object/
      
      query is a httpRequest
      query.URL = m_sBucketAddress+["/"]+URLEncode(StringToUTF8(sKeyName))
      query.Method = httpPost
      
      IF TypeVar(variable) _IN_ (wlArray, wlStructure, wlInstance) THEN
      	bufEncode is buffer
      	WHEN EXCEPTION IN
      		Serialize(variable,bufEncode,psdJSON)
      	DO
      		ErrorThrow(1,"Failure encoding the variable in JSON, error returned: "+ExceptionInfo(errFullDetails))
      		RESULT ""
      	END
      	query.Header["Content-Type"] = "application/json"		// The complex data will always be stored serialized in JSON
      	query.Content = bufEncode
      ELSE
      	query.Header["Content-Type"] = "text/plain"
      	query.Content = StringToUTF8(variable)
      END
      
      // The "normal" return code is 204 (No Content)
      answer is a httpResponse = HTTPSend(query)
      SWITCH answer.StatusCode	
      	CASE 200 // OK
      	// No error - the object was replaced
      	CASE 201 // Created
      	// No error - the object was added
      	CASE 204	// No content
      	// No error - the object was added or replaced (and we did not ask to receive a copy of the request body)
      	CASE 300 // Multiple choices
      		// No error - the object was added or replaced (we asked to receive a copy of the request body but there is an ambiguity)
      		dbgAssert(False,"No error but this case should not happen if we do not add the returnbody=true header")
      	OTHER CASE
      		ErrorThrow(1,StringBuild("Error during the addition, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      		RESULT ""
      END
      
      // Returns the created name
      // If the key was specified, the name is equal to the key
      // If the key was not specified, the name is generated by the server
      IF sKeyName="" THEN 
      	sKeyName = answer.Header["Location"]
      END
      
      RESULT sKeyName
      
      CASE Error:
      ErrorPropagate()
      RESULT ""
     type : 458752
   -
     name : ObjectRead
     internal_properties : CAAAAAgAAABUHz8hVhFi02/J7EhBrMlSNO0MeAqWBppfCjnxm/4kgJdm7XWgB5T6wjMexC1lxpG0E9/miOIxDqpCyq3t86PoLtBkATH/1oB8x09XjEnNP/qUDpwcbSPg0NLupmnY36w8JgJ/5axk6CsPJRVV4Ib+UFiKlFTTIkF739C1c2Up+mtV1Q==
     procedure_id : 1524355580659483120
     type_code : 12
     code : |1+
      // Summary: Reads an object in the Riak database
      // Syntax:
      //ObjectRead (<variable>, <sKeyName> is string [, <bDeserializeResult> is boolean])
      //
      // Parameters:
      //	variable: variable containing the result of the reading
      //	sKeyName (ANSI string): name of the key containing the object to read
      //	bDeserializeResult (boolean - default value=0): True to deserialize the JSON responses
      // Return value:
      // 	None
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE ObjectRead(variable, sKeyName is string, bDeserializeResult is boolean = False )
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/fetch-object/
      
      query is a httpRequest
      query.URL = m_sBucketAddress+["/"]+URLEncode(StringToUTF8(sKeyName))
      query.Method = httpGet
      
      answer is a httpResponse = HTTPSend(query)
      SWITCH answer.StatusCode
      	CASE 200 // OK, no error
      	CASE 300	// Multiple choices - in this case, the variable contains the list of identifiers for the "sibling" records
      		// To read a record, the query must be re-run by adding its identifier after the key
      		ErrorThrow(2,StringBuild("Several possible results. The query must be run again by adding the sought identifier to the key."))
      		variable = query.Content
      		RETURN
      	CASE 304 // Not modified
      		dbgAssert(False,"No error but this case should not happen if we do not add one of the If-None-Match or If-Modified-Since headers")
      	OTHER CASE
      		ErrorThrow(1,StringBuild("Error during the reading, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      		RETURN
      END
      
      sAnswerType is string = answer.Header["Content-Type"]
      IF  sAnswerType = "application/json" _AND_ bDeserializeResult THEN
      	WHEN EXCEPTION IN
      		Deserialize(variable,answer.Content,psdJSON)
      	DO
      		ErrorThrow(1,"Failure decoding the variable in JSON, error returned: "+ExceptionInfo(errFullDetails))
      		RETURN
      	END
      ELSE	
      	variable = UTF8ToString(answer.Content)
      END
      
      CASE Error:
      ErrorPropagate()
      RETURN
      
      
     type : 458752
   -
     name : ObjectDelete
     internal_properties : CAAAAAgAAABUHz8hVhFi02/J7EhBrMlSNO0MeAqWBppfCjnxm/4kgJdm7XWgB5T6wjMexC1lxpG0E9/miOIxDqpCyq3t86PoLtBkATH/1oB8x09XjEnNP/qUDpwcbSPg0NLupmnY36w8JgJ/5axk6CsPJRVV4Ib+UFiKlFTTIkF739C1c2Up+mtV1Q==
     procedure_id : 1524355580659548656
     type_code : 12
     code : |1+
      // Summary: Deletes an object from the Riak database
      // Syntax:
      //ObjectDelete (<sKeyName> is string)
      //
      // Parameters:
      //	sKeyName (ANSI string): key of the object to delete
      // Return value:
      // 	None
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE ObjectDelete( sKeyName is string )
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/delete-object/
      
      query is a httpRequest
      query.URL = m_sBucketAddress+["/"]+URLEncode(StringToUTF8(sKeyName))
      query.Method = httpDelete
      
      answer is a httpResponse = HTTPSend(query)
      SWITCH answer.StatusCode
      	CASE 204	// No content
      	// The object existed and it was deleted
      	CASE 404 // Not found
      	// The object does not exist
      	OTHER CASE
      		ErrorThrow(1,StringBuild("Error during the deletion, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      END
      
      CASE Error:
      ErrorPropagate()
      RETURN
      
     type : 458752
   -
     name : ObjectListKeys
     internal_properties : CAAAAAgAAAAiLlmAAabozJS7KCA2wB3hMazy9Hbnvh0io6LR/JApRTE1u5g1ZmF2czshGyTtWwF4G+bpnilFVVTazfjuGbLL4ihFBSO2mNfPYQJotwAty9Fv8rWbgVSa1Vc+piBj0X2mzgKLWriAnqP31gcNwX2rc/dK5hLW0Wvfv7WPt9/A2zNwAakgTyECKSpBZdaOsRkp+PLXOGax
     procedure_id : 1524355580659614192
     type_code : 12
     code : |1+
      // Summary: Returns the list of bucket keys in an array of strings
      // Syntax:
      //[ <Result> = ] ObjectListKeys ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	array: list of keys
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE ObjectListKeys()
      
      arrKeys is array of strings
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/list-keys/
      query is a httpRequest
      query.URL = m_sServerAddress+["/"]+"buckets/"+m_sBucketName+"/keys?keys=true"
      query.Method = httpGet
      
      answer is a httpResponse = HTTPSend(query)
      sContentTypeReponse is string = answer.Header["Content-Type"]
      IF answer.StatusCode<>200 _OR_ sContentTypeReponse<>"application/json" THEN
      	ErrorThrow(1,StringBuild("Error while listing the keys, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      	RESULT arrKeys
      END
      
      vInfo is variant = JSONToVariant(answer.Content)
      FOR EACH sKey of vInfo.keys
      	Add(arrKeys,sKey)
      END
      
      RESULT arrKeys
      
      CASE Error:
      ErrorPropagate()
      RESULT arrKeys
      
     type : 458752
   -
     name : PropertyRead
     internal_properties : CAAAAAgAAABUHz8hVhFi02/J7EhBrMlSNO0MeAqWBppfCjnxm/4kgJdm7XWgB5T6wjMexC1lxpG0E9/miOIxDqpCyq3t86PoLtBkATH/1oB8x09XjEnNP/qUDpwcbSPg0NLupmnY36w8JgJ/5axk6CsPJRVV4Ib+UFiKlFTTIkF739C1c2Up+mtV1Q==
     procedure_id : 1524355580659679728
     type_code : 12
     code : |1+
      // Summary: Read the bucket properties
      // Syntax:
      //[ <Result> = ] PropertyRead ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	variant: List of properties
      //
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE PropertyRead()
      
      vPropBlock is variant = Null
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/get-bucket-props/
      
      query is a httpRequest
      query.URL = m_sServerAddress+["/"]+"buckets/"+m_sBucketName+"/props"
      query.Method = httpGet
      
      answer is a httpResponse = HTTPSend(query)
      sContentTypeReponse is string = answer.Header["Content-Type"]
      IF answer.StatusCode<>200 _OR_ sContentTypeReponse<>"application/json" THEN
      	ErrorThrow(1,StringBuild("Error during the reading, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      	RESULT vPropBlock
      END
      
      WHEN EXCEPTION IN
      	vPropBlock = JSONToVariant(answer.Content)
      DO
      	ErrorThrow(1,"Failure decoding the variable in JSON, error returned: "+ExceptionInfo(errFullDetails))
      END
      
      RESULT vPropBlock
      
      CASE Error:
      ErrorPropagate()
      RESULT vPropBlock
     type : 458752
   -
     name : PropertyWrite
     internal_properties : CAAAAAgAAABUHz8hVhFi02/J7EhBrMlSNO0MeAqWBppfCjnxm/4kgJdm7XWgB5T6wjMexC1lxpG0E9/miOIxDqpCyq3t86PoLtBkATH/1oB8x09XjEnNP/qUDpwcbSPg0NLupmnY36w8JgJ/5axk6CsPJRVV4Ib+UFiKlFTTIkF739C1c2Up+mtV1Q==
     procedure_id : 1524355580659745264
     type_code : 12
     code : |1+
      // Summary: Modifies one or more bucket properties
      // Syntax:
      //PropertyWrite (<vPropBlock> is variant)
      //
      // Parameters:
      //	vPropBlock (variant): variant containing the properties to write. The properties that are not found in the variant keep their value on the server.
      // Return value:
      // 	None
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE PropertyWrite(vPropBlock is variant)
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/set-bucket-props/
      
      query is a httpRequest
      query.URL = m_sServerAddress+["/"]+"buckets/"+m_sBucketName+"/props"
      query.Method = httpPut
      query.ContentType = "application/json"
      
      bufSerial is buffer
      WHEN EXCEPTION IN
      	Serialize(vPropBlock,bufSerial,psdJSON)
      	query.Content = bufSerial
      DO
      	ErrorThrow(1,"Failure encoding the variable in JSON, error returned: "+ExceptionInfo(errFullDetails))
      	RETURN
      END
      
      answer is a httpResponse = HTTPSend(query)
      IF answer.StatusCode<>204 THEN
      	ErrorThrow(1,StringBuild("Error during the reading, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      END
      
      CASE Error:
      ErrorPropagate()
      RETURN
      
     type : 458752
   -
     name : PropertyReset
     internal_properties : CAAAAAgAAAAkIFuKyVq5AMB9cujkIJvZS7ZSrjCngm0uuSQBghhfjb9DG/qTuomut62/A/J9yfGS9bJ3/P0dvWSQx3B8eWQXSM41f4WmjO+DWzhhuCEAFoJKhaD2GukvPsKR61HUbEDr9ekSIb2Zn6D21aCGWohutELN5VFLcsj4iojM+BB/elD/sPgnUD5/Oj1sIo/L2IgbgAzNNmC3
     procedure_id : 1524355580659810800
     type_code : 12
     code : |1-
      // Summary: Reinitializes the properties of the bucket to their default values
      // Syntax:
      //PropertyReset ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      // Automatic process of errors:   run the block of code CASE ERROR
      //
      
      PROCEDURE PropertyReset()
      
      // Reference: http://docs.basho.com/riak/latest/dev/references/http/reset-bucket-props/
      
      query is a httpRequest
      query.URL = m_sBucketAddress+["/"]+"props"
      query.Method = httpDelete
      
      answer is a httpResponse = HTTPSend(query)
      IF answer.StatusCode<>204 THEN
      	ErrorThrow(1,StringBuild("Error during the renitialization, HTTP code returned: %1, content: %2",answer.StatusCode,answer.Content))
      END
      
      CASE Error:
      ErrorPropagate()
      RETURN
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : Classe1
resources :
 string_res :
  identifier : 0x1006a18e33eb3fd5
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
